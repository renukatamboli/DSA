# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def insertionSortList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if head is None or head.next is None:
            return head
        current = head.next
        while current is not None:
        
            key = current
            current = current.next
            j = head
            p1 = head
            
            while j != key and j is not None and key is not None and key.val > j.val:
                p1 = j
                j = j.next
            
            if j == head:
                temp = key.next
                key.next = j
                while j.next != key:
                    j = j.next
                j.next = temp
                head = key
                
                
            elif p1 is not None and j is not None:
                temp = key.next
                p1.next = key
                key.next = j
                while j.next != key:
                    j = j.next
                j.next = temp
                
 
        return head
                
                
                
            
            
        
